# -*- coding: utf-8 -*-
"""midAnn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IiLlCRnQW6Ud_YxSP1NwxbjWHqrhEYVd
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from keras.models import Sequential
from keras.layers import Dense

data = pd.read_csv("/content/sample_data/kidney_disease.csv")


data = data.dropna()


categorical_cols = data.select_dtypes(include=["object"]).columns
encoder = LabelEncoder()
for col in categorical_cols:
    data[col] = encoder.fit_transform(data[col])


X = data.drop("classification", axis=1)
y = data["classification"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = Sequential()
model.add(Dense(32, input_dim=X_train.shape[1], activation="relu"))
model.add(Dense(16, activation="relu"))
model.add(Dense(8, activation="relu"))
model.add(Dense(1, activation="sigmoid"))


model.compile(loss="binary_crossentropy", optimizer="adam", metrics=["accuracy"])


model.fit(X_train, y_train, epochs=50, batch_size=32, verbose=2)

loss, accuracy = model.evaluate(X_test, y_test)
print("Test accuracy:", accuracy)

